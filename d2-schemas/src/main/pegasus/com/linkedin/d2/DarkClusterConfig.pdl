namespace com.linkedin.d2

/**
 * Configuration for a dark canary cluster. Dark Canaries are instances of a service that have production traffic tee'd off to them, but the results are ignored. These are used for early validation of code, configs, and A/B ramps.
 */
record DarkClusterConfig {

  /**
   * Constant multiplier. The dispatcher(s) will send a multiple of the original requests
   */
  multiplier: float = 0.0

  /**
   * Desired query rate to be maintained to dark canaries. Measured in qps.
   */
  dispatcherOutboundTargetRate: int = 0

  /**
   * Max rate dispatcher can send to dark canary. Measured in qps. Will act as upper bound to protect canaries in case of traffic spikes
   */
  dispatcherOutboundMaxRate: int = 2147483647

  /**
   * There are 2 types of strategy: RELATIVE_TRAFFIC, CONSTANT_QPS. These can be specified in prioritized order and
   * will be picked in that order depending on availability.
   */
  enum multiplierStrategyType {

    /**
     * This strategy will try to keep the level of traffic on a dark cluster instance relative to the dispatching instance,
     * as indicated by the multiplier.
     */
    RELATIVE_TRAFFIC

    /**
     * This strategy will try to maintain a certain queries per second, as specified by dispatcherOutboundTargetRate.
     */
    CONSTANT_QPS
  }

  /**
   * Prioritized order of dark cluster multiplier strategies.
   */
  multiplierStrategyList: array[multiplierStrategyType] = ["RELATIVE_TRAFFIC"]

  /**
   * The transport client properties to use for this dark cluster
   */
  transportClientProperties: D2TransportClientProperties
}
