// add rest.li's gradle plugins so they can be used throughout project
buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
  }
  dependencies {
    classpath 'com.linkedin.pegasus:gradle-plugins:19.0.3'
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '4.6'
}

final pegasusVersion = '19.0.3'
ext.spec = [
  'product' : [
    'pegasus' : [
      'data' : 'com.linkedin.pegasus:data:' + pegasusVersion,
      'generator' : 'com.linkedin.pegasus:generator:' + pegasusVersion,
      'r2Netty' : 'com.linkedin.pegasus:r2-netty:' + pegasusVersion,
      'restliCommon' : 'com.linkedin.pegasus:restli-common:' + pegasusVersion,
      'restliClient' : 'com.linkedin.pegasus:restli-client:' + pegasusVersion,
      'restliServer' : 'com.linkedin.pegasus:restli-server:' + pegasusVersion,
      'restliTools' : 'com.linkedin.pegasus:restli-tools:' + pegasusVersion,
      'gradlePlugins' : 'com.linkedin.pegasus:gradle-plugins:' + pegasusVersion,
      'restliNettyStandalone' : 'com.linkedin.pegasus:restli-netty-standalone:' + pegasusVersion,
      'restliServerStandalone' : 'com.linkedin.pegasus:restli-server-standalone:' + pegasusVersion
    ]
  ]
]

allprojects {
  apply plugin: 'idea'
  apply plugin: 'eclipse'
}

subprojects {
  apply plugin: 'maven'

  afterEvaluate {
    // add the standard pegasus dependencies wherever the plugin is used
    if (project.plugins.hasPlugin('pegasus')) {
      dependencies {
        dataTemplateCompile spec.product.pegasus.data
        restClientCompile spec.product.pegasus.restliClient
      }
    }
  }

  repositories {
    mavenLocal()
    mavenCentral()
  }
}
