{
  "models" : [ {
    "type" : "record",
    "name" : "Empty",
    "namespace" : "com.linkedin.restli.examples.greetings.api",
    "fields" : [ ]
  }, {
    "type" : "record",
    "name" : "Greeting",
    "namespace" : "com.linkedin.restli.examples.greetings.api",
    "doc" : "A greeting",
    "fields" : [ {
      "name" : "id",
      "type" : "long"
    }, {
      "name" : "message",
      "type" : "string"
    }, {
      "name" : "tone",
      "type" : {
        "type" : "enum",
        "name" : "Tone",
        "symbols" : [ "FRIENDLY", "SINCERE", "INSULTING" ]
      },
      "doc" : "tone"
    }, {
      "name" : "senders",
      "type" : {
        "type" : "array",
        "items" : "string"
      },
      "doc" : "Sender(s) of the message",
      "optional" : true
    } ]
  }, {
    "type" : "record",
    "name" : "IncludeMe",
    "namespace" : "com.linkedin.restli.examples.greetings.api",
    "fields" : [ {
      "name" : "includedA",
      "type" : "string",
      "optional" : true,
      "validate" : {
        "strlen" : {
          "max" : 10,
          "min" : 1
        }
      }
    }, {
      "name" : "includedB",
      "type" : "string",
      "optional" : true
    } ]
  }, "com.linkedin.restli.examples.greetings.api.Tone", {
    "type" : "record",
    "name" : "ValidationDemo",
    "namespace" : "com.linkedin.restli.examples.greetings.api",
    "include" : [ "IncludeMe" ],
    "fields" : [ {
      "name" : "stringA",
      "type" : "string",
      "validate" : {
        "strlen" : {
          "max" : 10,
          "min" : 1
        }
      }
    }, {
      "name" : "intA",
      "type" : "int",
      "optional" : true
    }, {
      "name" : "stringB",
      "type" : "string"
    }, {
      "name" : "intB",
      "type" : "int",
      "optional" : true,
      "validate" : {
        "seven" : { }
      }
    }, {
      "name" : "UnionFieldWithInlineRecord",
      "type" : [ {
        "type" : "record",
        "name" : "myRecord",
        "fields" : [ {
          "name" : "foo1",
          "type" : "int"
        }, {
          "name" : "foo2",
          "type" : "int",
          "optional" : true
        } ]
      }, {
        "type" : "enum",
        "name" : "myEnum",
        "symbols" : [ "FOOFOO", "BARBAR" ]
      } ]
    }, {
      "name" : "ArrayWithInlineRecord",
      "type" : {
        "type" : "array",
        "items" : {
          "type" : "record",
          "name" : "myItem",
          "fields" : [ {
            "name" : "bar1",
            "type" : "string"
          }, {
            "name" : "bar2",
            "type" : "string"
          } ]
        }
      },
      "optional" : true
    }, {
      "name" : "MapWithTyperefs",
      "type" : {
        "type" : "map",
        "values" : {
          "type" : "typeref",
          "name" : "myGreeting",
          "ref" : "Greeting"
        }
      },
      "optional" : true
    }, {
      "name" : "validationDemoNext",
      "type" : "ValidationDemo",
      "optional" : true
    } ]
  }, {
    "type" : "record",
    "name" : "ValidationDemoCriteria",
    "namespace" : "com.linkedin.restli.examples.greetings.api",
    "doc" : "A search criteria to filter validation demo.",
    "fields" : [ {
      "name" : "intA",
      "type" : "int"
    }, {
      "name" : "stringB",
      "type" : "string"
    } ]
  }, "com.linkedin.restli.examples.greetings.api.myEnum", "com.linkedin.restli.examples.greetings.api.myGreeting", "com.linkedin.restli.examples.greetings.api.myItem", "com.linkedin.restli.examples.greetings.api.myRecord" ],
  "schema" : {
    "annotations" : {
      "createOnly" : {
        "value" : [ "stringB", "intB", "UnionFieldWithInlineRecord/com.linkedin.restli.examples.greetings.api.myRecord/foo2", "MapWithTyperefs/*/id" ]
      },
      "readOnly" : {
        "value" : [ "stringA", "intA", "UnionFieldWithInlineRecord/com.linkedin.restli.examples.greetings.api.myRecord/foo1", "ArrayWithInlineRecord/*/bar1", "validationDemoNext/stringB", "validationDemoNext/UnionFieldWithInlineRecord" ]
      }
    },
    "name" : "autoValidationDemos",
    "namespace" : "com.linkedin.restli.examples.greetings.client",
    "path" : "/autoValidationDemos",
    "schema" : "com.linkedin.restli.examples.greetings.api.ValidationDemo",
    "doc" : "Free-form resource for testing Rest.li data validation.\n This class shows how to validate data automatically by using the validation filters.\n Invalid incoming data or outgoing data are rejected, and an error response is returned to the client.\n\ngenerated from: com.linkedin.restli.examples.greetings.server.AutomaticValidationDemoResource",
    "collection" : {
      "identifier" : {
        "name" : "autoValidationDemosId",
        "type" : "int"
      },
      "supports" : [ "batch_create", "batch_get", "batch_partial_update", "batch_update", "create", "get", "get_all", "partial_update", "update" ],
      "methods" : [ {
        "annotations" : {
          "returnEntity" : { }
        },
        "method" : "create"
      }, {
        "method" : "get"
      }, {
        "method" : "update"
      }, {
        "method" : "partial_update"
      }, {
        "annotations" : {
          "returnEntity" : { }
        },
        "method" : "batch_create"
      }, {
        "method" : "batch_get"
      }, {
        "method" : "batch_update"
      }, {
        "method" : "batch_partial_update"
      }, {
        "method" : "get_all"
      } ],
      "finders" : [ {
        "name" : "search",
        "parameters" : [ {
          "name" : "intA",
          "type" : "int"
        } ]
      } ],
      "batchFinders" : [ {
        "name" : "searchValidationDemos",
        "parameters" : [ {
          "name" : "criteria",
          "type" : "{ \"type\" : \"array\", \"items\" : \"com.linkedin.restli.examples.greetings.api.ValidationDemoCriteria\" }"
        } ],
        "metadata" : {
          "type" : "com.linkedin.restli.examples.greetings.api.Empty"
        },
        "pagingSupported" : true,
        "batchParam" : "criteria"
      } ],
      "entity" : {
        "path" : "/autoValidationDemos/{autoValidationDemosId}"
      }
    }
  }
}