/*
   Copyright (c) 2021 LinkedIn Corp.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/

/**
 * The purpose of this script is to configure the following tasks for a sub-project:
 * - artifactoryPublish: publishes all artifacts for the "release" publication to JFrog; depends on...
 *   - generatePomFileForReleasePublication: defined in publications.gradle
 *   - assertArtifactsExist: defined in publications.gradle
 *   - assertBintrayCredentialsExist: asserts that JFrog credentials are present as environment variables
 */
apply plugin: 'com.jfrog.artifactory' // https://www.jfrog.com/confluence/display/rtf/gradle+artifactory+plugin

final String jfrogUserEnv = 'JFROG_USER'
final String jfrogKeyEnv = 'JFROG_KEY'

def jfrogUser = System.getenv(jfrogUserEnv)
def jfrogKey = System.getenv(jfrogKeyEnv)

// Configure the "artifactoryPublish" task for the "release" publication.
artifactory {
  contextUrl = 'https://linkedin.jfrog.io/artifactory'
  clientConfig.setIncludeEnvVars(false)

  publish {
    repository {
      repoKey = 'test-repo' // The Artifactory repository key to publish to // TODO: change this to "pegasus" once this has been tested in CI
      username = jfrogUser // The publisher user name
      password = jfrogKey // The publisher password
    }

    defaults {
      publications(publishing.publications.release)
    }
  }
}

// Utility task to ensure that we aren't attempting a publish without providing JFrog credentials.
task assertJFrogCredentialsExist() {
  doLast {
    if (!jfrogUser || !jfrogKey) {
      throw new GradleException(
          "Cannot perform JFrog upload. Missing '${jfrogUserEnv}' or '${jfrogKeyEnv}' environment variable. " +
          "These are set in the .travis.yml config file (if running in CI) or on the CLI (if running locally).")
    }
  }
}

// Gather all assertion/publication/publish tasks into one task
artifactoryPublish.dependsOn assertArtifactsExist, assertJFrogCredentialsExist, "generatePomFileForReleasePublication"
