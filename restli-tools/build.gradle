plugins {
  id "java-library"
}

// This block is only supported and required when building with JDK11+
if (JavaVersion.current() >= JavaVersion.VERSION_11) {
  // We need a custom source set for JDK11+ classes
  sourceSets {
    java11 {
      java {
        srcDirs = ['src/main/java11']
      }
    }
  }
  // This compile task is automatically generated by java-library plugin for custom JDK11 only source set
  // We need to explicitly set code versions and override defaults
  compileJava11Java {
    sourceCompatibility = 11
    targetCompatibility = 11
    options.compilerArgs.addAll(['--release', '11'])
  }

  jar {
    // We package JDK11+ classes into a custom folder.
    // JVM will load the class if version of the class is equal or less than version of JVM.
    // Thus JDK8 or JDK9 will load default class from "com" folder and JDK11+ will load the custom folder
    into('META-INF/versions/11') {
      from sourceSets.java11.output
    }
    manifest {
      attributes(
          "Manifest-Version": "1.0",
          "Multi-Release": true
      )
    }
  }
}

dependencies {
  compile project(':data')
  compile project(':r2-core')
  compile project(':li-jersey-uri')
  compile project(':generator')
  compile project(':pegasus-common')
  compile project(':restli-common')
  compile project(':restli-client')
  compile project(':restli-server')
  compile externalDependency.caffeine
  compile externalDependency.commonsIo
  compile externalDependency.codemodel
  compile externalDependency.commonsCli
  compile externalDependency.jacksonCore
  compile externalDependency.jacksonDataBind
  compile externalDependency.jdkTools
  compile externalDependency.velocity

  testCompile externalDependency.mockito
  testCompile externalDependency.testng
  testCompile externalDependency.junit
  testCompile externalDependency.commonsHttpClient
  testCompile externalDependency.javaparser

  if (JavaVersion.current() >= JavaVersion.VERSION_11) {
    // Custom dependency set is required for JDK11+ only source set
    java11Implementation files(sourceSets.main.output.classesDirs)
    java11Compile project(':data')
    java11Compile project(':r2-core')
    java11Compile project(':li-jersey-uri')
    java11Compile project(':generator')
    java11Compile project(':pegasus-common')
    java11Compile project(':restli-common')
    java11Compile project(':restli-client')
    java11Compile project(':restli-server')
    java11Compile externalDependency.caffeine
    java11Compile externalDependency.commonsIo
    java11Compile externalDependency.codemodel
    java11Compile externalDependency.commonsCli
    java11Compile externalDependency.jacksonCore
    java11Compile externalDependency.jacksonDataBind
    java11Compile externalDependency.velocity

    java11Compile externalDependency.mockito
    java11Compile externalDependency.testng
    java11Compile externalDependency.junit
    java11Compile externalDependency.commonsHttpClient
    java11Compile externalDependency.javaparser
  }
}

apply from: "${buildScriptDirPath}/restModel.gradle"