{
  "models" : [ {
    "type" : "record",
    "name" : "Location",
    "namespace" : "com.linkedin.restli.tools.twitter",
    "fields" : [ ]
  }, {
    "type" : "record",
    "name" : "Status",
    "namespace" : "com.linkedin.restli.tools.twitter",
    "fields" : [ ]
  }, {
    "type" : "enum",
    "name" : "StatusType",
    "namespace" : "com.linkedin.restli.tools.twitter",
    "symbols" : [ "RETWEET", "REPLY", "STATUS" ]
  } ],
  "schema" : {
    "name" : "statuses",
    "path" : "/statuses",
    "schema" : "com.linkedin.restli.tools.twitter.Status",
    "doc" : "CollectionResource containing all statuses\n\ngenerated from: com.linkedin.restli.tools.twitter.StatusCollectionResource",
    "resourceClass" : "com.linkedin.restli.tools.twitter.StatusCollectionResource",
    "collection" : {
      "identifier" : {
        "name" : "statusID",
        "type" : "long"
      },
      "alternativeKeys" : [ {
        "name" : "alt",
        "type" : "string",
        "keyCoercer" : "com.linkedin.restli.tools.twitter.StringLongCoercer"
      }, {
        "name" : "newAlt",
        "type" : "string",
        "keyCoercer" : "com.linkedin.restli.tools.twitter.StringLongCoercer"
      } ],
      "supports" : [ "batch_get", "create", "delete", "get", "partial_update" ],
      "methods" : [ {
        "method" : "create",
        "javaMethodName" : "create",
        "doc" : "Creates a new Status"
      }, {
        "method" : "get",
        "javaMethodName" : "get",
        "doc" : "Gets a single status resource"
      }, {
        "method" : "partial_update",
        "javaMethodName" : "update",
        "doc" : "Updates a single status resource"
      }, {
        "method" : "delete",
        "javaMethodName" : "delete",
        "doc" : "Deletes a status resource"
      }, {
        "method" : "batch_get",
        "javaMethodName" : "batchGet",
        "doc" : "Gets a batch of statuses"
      } ],
      "finders" : [ {
        "name" : "public_timeline",
        "javaMethodName" : "getPublicTimeline",
        "doc" : "Gets a sample of the timeline of statuses generated by all users",
        "pagingSupported" : true
      }, {
        "name" : "search",
        "javaMethodName" : "search",
        "doc" : "Keyword search for statuses",
        "parameters" : [ {
          "name" : "keywords",
          "type" : "string",
          "doc" : "keywords to search for"
        }, {
          "name" : "since",
          "type" : "long",
          "default" : "-1",
          "doc" : "a unix timestamp. If present, only statuses created after this time are returned"
        }, {
          "name" : "type",
          "type" : "com.linkedin.restli.tools.twitter.StatusType",
          "optional" : true
        } ],
        "pagingSupported" : true
      }, {
        "name" : "user_timeline",
        "javaMethodName" : "getUserTimeline",
        "doc" : "Gets the status timeline for a given user",
        "pagingSupported" : true
      } ],
      "actions" : [ {
        "name" : "intArrayAction",
        "javaMethodName" : "intArrayAction",
        "doc" : "Action array return type test case",
        "parameters" : [ {
          "name" : "ints",
          "type" : "{ \"type\" : \"array\", \"items\" : \"int\" }"
        } ],
        "returns" : "{ \"type\" : \"array\", \"items\" : \"int\" }"
      }, {
        "name" : "statusArrayAction",
        "javaMethodName" : "statusArrayAction",
        "doc" : "Action data template array return type and input type test case",
        "parameters" : [ {
          "name" : "statuses",
          "type" : "{ \"type\" : \"array\", \"items\" : \"com.linkedin.restli.tools.twitter.Status\" }"
        } ],
        "returns" : "{ \"type\" : \"array\", \"items\" : \"com.linkedin.restli.tools.twitter.Status\" }"
      } ],
      "entity" : {
        "path" : "/statuses/{statusID}",
        "actions" : [ {
          "name" : "forward",
          "javaMethodName" : "forward",
          "doc" : "Ambiguous action binding test case",
          "parameters" : [ {
            "name" : "to",
            "type" : "long"
          } ]
        } ],
        "subresources" : [ {
          "name" : "location",
          "path" : "/statuses/{statusID}/location",
          "schema" : "com.linkedin.restli.tools.twitter.Location",
          "doc" : "Simple resource that contains the location of a status.\n\ngenerated from: com.linkedin.restli.tools.twitter.LocationResource",
          "resourceClass" : "com.linkedin.restli.tools.twitter.LocationResource",
          "simple" : {
            "supports" : [ "delete", "get", "partial_update", "update" ],
            "methods" : [ {
              "method" : "get",
              "javaMethodName" : "get",
              "doc" : "Gets the location of the parent status."
            }, {
              "method" : "update",
              "javaMethodName" : "update",
              "doc" : "Updates the location of the parent status."
            }, {
              "method" : "partial_update",
              "javaMethodName" : "update",
              "doc" : "Updates the location of the parent status."
            }, {
              "method" : "delete",
              "javaMethodName" : "delete",
              "doc" : "Deletes the location of the parent status."
            } ],
            "actions" : [ {
              "name" : "new_status_from_location",
              "javaMethodName" : "newStatusFromLocation",
              "doc" : "Replies to all followers nearby.",
              "parameters" : [ {
                "name" : "status",
                "type" : "string"
              } ]
            } ],
            "entity" : {
              "path" : "/statuses/{statusID}/location"
            }
          }
        }, {
          "name" : "replies",
          "path" : "/statuses/{statusID}/replies",
          "schema" : "com.linkedin.restli.tools.twitter.Status",
          "doc" : "Nested CollectionResource of all replies to a given status\n\ngenerated from: com.linkedin.restli.tools.twitter.RepliesCollectionResource",
          "resourceClass" : "com.linkedin.restli.tools.twitter.RepliesCollectionResource",
          "collection" : {
            "identifier" : {
              "name" : "statusID",
              "type" : "long"
            },
            "supports" : [ "batch_get", "create", "get_all" ],
            "methods" : [ {
              "method" : "create",
              "javaMethodName" : "create",
              "doc" : "Replies to the parent status"
            }, {
              "method" : "batch_get",
              "javaMethodName" : "batchGet",
              "doc" : "Gets a batch of replies by statusID"
            }, {
              "method" : "get_all",
              "javaMethodName" : "getAll",
              "doc" : "Iterates through all replies to the parent status",
              "pagingSupported" : true
            } ],
            "actions" : [ {
              "name" : "replyToAll",
              "javaMethodName" : "replyToAll",
              "doc" : "Simple test action to demonstrate actions on a nested collection resource",
              "parameters" : [ {
                "name" : "status",
                "type" : "string"
              } ]
            } ],
            "entity" : {
              "path" : "/statuses/{statusID}/replies/{statusID}"
            }
          }
        } ]
      }
    }
  }
}